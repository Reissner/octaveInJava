<?xml version="1.0" encoding="utf-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <!-- coordinates for model and artifact xxx -->
  <modelVersion>4.0.0</modelVersion>

  <!-- The Basics -->
  <groupId>eu.simuline.octave</groupId><!-- dk.ange -->
  <artifactId>javaoctave</artifactId>
  <version>0.7.1-SNAPSHOT</version>
  <packaging>jar</packaging>


  <!-- information for generating a site -->
  <name>javaoctave</name>
  <description>
    A bridge from Java to Octave, 
    useful if you want to do some Octave calculations 
    from inside a Java application. 
  </description>

  <url>https://github.com/Reissner/octaveInJava</url>
  <!--url>http://www.simuline.eu/OctaveInJava/</url-->
  <!--url>https://github.com/AngeAnalytics/java-octave</url-->
  <inceptionYear>2006</inceptionYear>
  <licenses>
    <license>
      <name>License, Version Apache 2</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
      <distribution>repo</distribution>
      <comments>A business-friendly OSS license</comments>
    </license>
  </licenses>

  <!--organization>
    <name>Ange Optimization ApS</name>
    <url>http://ange.dk</url>
  </organization-->

  <organization>
    <name>Simuline Organization (l2r)</name>
    <url>http://www.simuline.eu</url>
  </organization>

  <developers>
    <developer>
      <id>KH</id>
      <name>Kim Rydhof Thor Hansen</name>
      <email>kim@rthansen.dk</email>
      <organization>Ange Optimization ApS</organization>
      <timezone>Europe/Berlin</timezone>
    </developer>
    <developer>
      <id>ER</id>
      <name>Ernst Reissner</name>
      <email>Ernst.Reissner@simuline.eu</email>
      <organization>l2r</organization>
      <timezone>Europe/Berlin</timezone>
      <properties>
        <picUrl>http://www.simuline.eu/Gluck_0001.gif</picUrl>
      </properties>
    </developer>
  </developers>
  <!-- mailingLists></mailingLists-->

  <properties>
    <!-- to keep dependencies up to date: 
    mvn versions:display-plugin-updates
    mvn versions:display-dependency-updates -->
   <versionMvn>3.6.3</versionMvn>


    <versionPmd>6.29.0</versionPmd><!-- with mvn plugin 3.8 -->
    <versionPmdMvnPlugin>3.13.0</versionPmdMvnPlugin><!-- works with pmd ??? -->

    <versionTestPlugins>3.0.0-M5</versionTestPlugins>


    <!-- Silence: [WARNING] Using platform encoding (UTF-8 actually) 
	 to copy filtered resources, i.e. build is platform dependent! -->
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.pmd.rulesetfiles>
      ${basedir}/config/myPmdRuleset.xml
    </maven.pmd.rulesetfiles>

    <project.scm.id>github</project.scm.id>


    <urlSnapshotDir>
      https://oss.sonatype.org/content/repositories/snapshots/
    </urlSnapshotDir>
  </properties>

  <!-- source repositories: at the moment not needed. -->
  <repositories>
    <repository>
      <id>localRepository</id>
      <!--url>file:///home/ernst/Software/RepositoryLocal/maven2/</url-->
      <!-- in intermediate step to come for testhelpers only -->
      <url>https://www.simuline.eu/RepositoryMaven</url>
    </repository>
  </repositories>




  <dependencies>

    <dependency>
      <groupId>fastutil</groupId>
      <artifactId>fastutil</artifactId>
      <version>5.0.9</version>
    </dependency>

    <dependency>
      <groupId>commons-logging</groupId>
      <artifactId>commons-logging</artifactId>
      <version>1.2</version>
    </dependency>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.13.1</version>
      <!--scope>test</scope--> 
      <!-- remove to make javadoc run import org.junit -->
    </dependency>

    <dependency>
      <groupId>eu.simuline</groupId>
      <artifactId>TestHelpers</artifactId>
      <version>1.0</version>
      <!--scope>test</scope-->
    </dependency>

    <!--dependency>
      <groupId>net.sourceforge.cobertura</groupId>
      <artifactId>cobertura</artifactId>
      <version>2.1.1</version>
      <scope>test</scope>
    </dependency-->

    <!-- this one is outdated and replaced by 
	 com.google.code.findbugs/annotations 
	 which cannot be downloaded although in repo. -->
    <!--dependency>
      <groupId>net.sourceforge.findbugs</groupId>
      <artifactId>annotations</artifactId>
      <version>1.3.2</version>
    </dependency-->

    <!--dependency>
      <groupId>com.google.code.findbugs</groupId>
      <artifactId>annotations</artifactId>
      <version>‌​3.0.1</version>
   </dependency-->

  </dependencies>


  <!-- Build Settings -->
  <build>

    <pluginManagement>
      <plugins>
	<!-- all plugins used for build and for reporting -->
	<!-- checkstyle plugin-->
	      <!-- headerLocation: (Default: LICENSE.txt)
	      User property: checkstyle.header.file
	      Specifies the location of the License file 
	      (a.k.a. the header file) that can be used by Checkstyle 
	      to verify that source code has the correct license header. -->
	      <!-- violationIgnore: User property: checkstyle.violation.ignore
		   Violations to ignore. 
		   This is a comma-separated list, 
		   each value being either a rule name, 
		   a rule category or a java package name of rule class. -->
	<!--plugin>
	  <groupId>org.apache.maven.plugins</groupId>
	  <artifactId>maven-checkstyle-plugin</artifactId>
	  <version>3.0.0</version>

	  <dependencies>
	    <dependency>
	      <groupId>com.puppycrawl.tools</groupId>
	      <artifactId>checkstyle</artifactId>
	      <version>8.18</version>
	    </dependency>
	  </dependencies>

	  <configuration>
	    <headerLocation>
	    </headerLocation>
 	    <violationIgnore>
	    </violationIgnore>
	    <configLocation>
	      ${basedir}/config/myChkStyleRuleset.xml
	    </configLocation>
	    <encoding>UTF-8</encoding>
	  </configuration>
	</plugin-->

	<!-- findbugs plugin TBD: switch to spotbugs -->
	<!--plugin>
	  <groupId>org.codehaus.mojo</groupId>
	  <artifactId>findbugs-maven-plugin</artifactId>
	  <version>3.0.5</version>
	  <configuration>
	    <xmlOutput>true</xmlOutput>
	  </configuration>
	</plugin-->

      <!-- pmd plugin **** reporting or build? -->
      <plugin>
	<groupId>org.apache.maven.plugins</groupId>
	<artifactId>maven-pmd-plugin</artifactId>
	<version>${versionPmdMvnPlugin}</version><!-- works with pmd 5.8.1 -->

        <dependencies>
          <dependency>
            <groupId>net.sourceforge.pmd</groupId>
            <artifactId>pmd-core</artifactId>
            <version>${versionPmd}</version>
          </dependency>
          <dependency>
            <groupId>net.sourceforge.pmd</groupId>
            <artifactId>pmd-java</artifactId>
            <version>${versionPmd}</version>
          </dependency>
        </dependencies>

        <configuration>
          <linkXref>true</linkXref><!-- default -->
          <sourceEncoding>${project.build.sourceEncoding}</sourceEncoding>
          <minimumTokens>100</minimumTokens><!-- for cpd -->
          <rulesets>
	    <ruleset>${maven.pmd.rulesetfiles}</ruleset>
          </rulesets>
	  <skipEmptyReport>false</skipEmptyReport>
        </configuration>
      </plugin>


 
      </plugins>
    </pluginManagement>



    <plugins>

      <!-- plugin to keep versions up to date -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>versions-maven-plugin</artifactId>
        <version>2.8.1</version>
      </plugin>

      <!-- at the moment just to enforce maven version 
	   **** seems to be buggy and to make also update of plugins unsafe -->
      <plugin>
	<groupId>org.apache.maven.plugins</groupId>
	<artifactId>maven-enforcer-plugin</artifactId>
        <version>3.0.0-M3</version>
        <executions>
          <execution>
            <id>enforce-versions</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <requireMavenVersion>
                  <version>${versionMvn}</version>
                 </requireMavenVersion>
                <!--requireJavaVersion>
                  <version>1.8</version>
                </requireJavaVersion-->
              </rules>
	      <!--alwaysFail>true</alwaysFail-->
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- information about a project or the system -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-help-plugin</artifactId>
        <version>3.2.0</version>
      </plugin>

      <!-- configuration for clean plugin -->
      <plugin>
	<artifactId>maven-clean-plugin</artifactId>
	<version>3.1.0</version>
	<configuration>
	  <verbose>true</verbose>
	</configuration>
      </plugin>

	<plugin>
		<groupId>org.apache.maven.plugins</groupId>
		<artifactId>maven-resources-plugin</artifactId>
		<version>3.2.0</version>
		<configuration>
		<encoding>UTF-8</encoding>
		</configuration>
	</plugin>


      <!-- This plugin will set properties values 
	   using dependency information -->
      <plugin>
	<groupId>org.apache.maven.plugins</groupId>
	<artifactId>maven-dependency-plugin</artifactId>
	<version>3.1.2</version>
	<executions>
	  <execution>
	    <goals>
	      <goal>properties</goal>
	    </goals>
	  </execution>
	</executions>
      </plugin>



      <!-- compiler plugin -->
      <plugin>
	<groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.8.1</version>
        <configuration>
	  <source>11</source>
          <target>11</target>
	</configuration>
      </plugin>

     <!-- configuration for site -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-site-plugin</artifactId>
        <version>3.9.1</version>
        <configuration>
          <locales>en</locales>
        </configuration>
      </plugin>

      <!-- docbook plugin -->
      <plugin>
	<groupId>com.agilejava.docbkx</groupId>
        <artifactId>docbkx-maven-plugin</artifactId>
        <version>2.0.17</version>
        <executions>
          <execution>
            <goals>
              <goal>generate-xhtml</goal>
              <!--goal>generate-pdf</goal-->
            </goals>
            <phase>pre-site</phase>
          </execution>
        </executions>
        <configuration>
	  <sourceDirectory>src/site/docbkx</sourceDirectory>
	  <targetDirectory>target/site</targetDirectory>
          <!--includes>article.xml</includes-->
        </configuration>
      </plugin>

 
      <!-- configuration for tests -->
	<plugin>
		<groupId>org.apache.maven.plugins</groupId>
		<artifactId>maven-surefire-plugin</artifactId>
		<version>${versionTestPlugins}</version>
		<configuration>
			<redirectTestOutputToFile>true</redirectTestOutputToFile>
			<trimStackTrace>false</trimStackTrace>
			<excludes>
				<exclude>TestVersion.java</exclude>
			</excludes>
		</configuration>
	</plugin>

      <plugin>
	<groupId>org.apache.maven.plugins</groupId>
	<artifactId>maven-failsafe-plugin</artifactId>
	<version>${versionTestPlugins}</version>
	<configuration>
	  <!--forkCount>0</forkCount -->
	  <useSystemClassLoader>true</useSystemClassLoader>
	  <useManifestOnlyJar>false</useManifestOnlyJar>
	  <redirectTestOutputToFile>true</redirectTestOutputToFile>
	  <trimStackTrace>false</trimStackTrace>
	  <includes>
	    <include>TestMetaInfo.java</include>
	  </includes>
	</configuration>
	<executions>
	  <execution>
	    <id>run-tests</id>
	    <phase>integration-test</phase>
	    <goals>
	      <goal>integration-test</goal>
	      <goal>verify</goal>
	    </goals>
	  </execution>
	</executions>
      </plugin>

      <!-- javadoc plugin -->
      <!-- synchronize with reporting -->
      <plugin>
	<groupId>org.apache.maven.plugins</groupId>
	<artifactId>maven-javadoc-plugin</artifactId>
	<version>3.2.0</version>
	<executions>
	  <execution>
	    <id>attach-javadocs</id>
	    <goals>
	      <goal>javadoc</goal><!-- jar -->
	    </goals>
	    <configuration>
	      <sourcepath>
		${project.basedir}/src/main/java:${project.basedir}/src/test/java
	      </sourcepath>
	  <tags>
	    <tag>
	      <name>To.Do</name>
	      <!-- todo tag for all places -->
	      <placement>a</placement>
	      <head>what is to be done in the present code fragment. </head>
	    </tag>
	  </tags>
	  <breakiterator>true</breakiterator>

	  <links>
	    <!--link>file:///usr/share/javadoc/java-1.8.0-openjdk/api/</link-->
	    <link>http://junit.sourceforge.net/javadoc</link>
	  </links>
	      <show>private</show>
<!-- -Xdoclint:reference  -->
	      <additionalparam>-Xdoclint:html -Xdoclint:reference --allow-script-in-comments</additionalparam>
	    </configuration>
	  </execution>
	</executions>
      </plugin>


      <!-- Add entries to manifest-->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>3.2.0</version>
        <configuration>
          <archive>
	    <!-- the manifest starts with the following lines: 
		 Manifest-Version: 1.0 -->
            <manifest>
	      <!--addClasspath>false</addClasspath--><!-- (default) -->
	      <!--addDefaultEntries>true</addDefaultEntries--><!-- (default)-->
	      <!-- adds 
		   Created-By: Maven Jar Plugin 3.2.0
		   Build-Jdk-Spec: ${java.specification.version} -->
	      <addDefaultImplementationEntries>
		true
	      </addDefaultImplementationEntries>
	      <!-- adds the following lines to MANIFEST.MF (default is false): 
		   Implementation-Title: ${project.name}
		   Implementation-Version: ${project.version}
		   Implementation-Vendor: ${project.organization.name} -->
	      <addDefaultSpecificationEntries>
		false
	      </addDefaultSpecificationEntries>
	      <!-- adds the following lines to MANIFEST.MF (default is false): 
		   Specification-Title: ${project.name}
		   Specification-Version: 
		   ${project.artifact.selectedVersion.majorVersion}.
		   ${project.artifact.selectedVersion.minorVersion}
		   Specification-Vendor: ${project.organization.name} -->
	      <addBuildEnvironmentEntries>true</addBuildEnvironmentEntries>
	      <!-- adds the following lines to MANIFEST.MF (default is false): 
		   Build-Tool: ${maven.build.version}
		   Build-Jdk: ${java.version} (${java.vendor})
		   Build-Os:  ${os.name} (${os.version}; (${os.arch}) -->
              <packageName>eu/simuline/octave/</packageName>
  	      
            </manifest>
	    <!-- Add the following key-value pairs <key>value</key> 
		 as lines 'key: value' to MANIFEST.MF -->
            <manifestEntries>
              <Bundle-License>${project.licenses[0].url}</Bundle-License>
              <Project-Url>${project.url}</Project-Url>
              <Sealed>true</Sealed>
            </manifestEntries>
	    <manifestSections>
	      <manifestSection>
		<name>eu/simuline/octave/</name>
		<manifestEntries>
		<!--Implementation-Title>${project.name}</Implementation-Title-->
		<Extension-name>eu.simuline.octave</Extension-name>
		<Specification-Version>
		  ${project.artifact.selectedVersion.majorVersion}.${project.artifact.selectedVersion.minorVersion}
		</Specification-Version>
		<Implementation-Version>${project.version}</Implementation-Version>
		</manifestEntries>
	      </manifestSection>
	    </manifestSections>
          </archive>
        </configuration>
      </plugin>

      <!-- Configure tag name for mvn release:prepare -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-release-plugin</artifactId>
        <version>3.0.0-M1</version>
        <configuration>
          <tagNameFormat>release-@{project.version}</tagNameFormat>
        </configuration>
      </plugin>

      <!-- Deploy sources.jar files -->
      <!--plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <version>3.2.1</version>
        <executions>
          <execution>
            <id>attach-sources</id>
            <phase>verify</phase>
            <goals>
              <goal>jar-no-fork</goal>
            </goals>
          </execution>
        </executions>
      </plugin-->

      <plugin>
	<groupId>org.apache.maven.plugins</groupId>
	<artifactId>maven-gpg-plugin</artifactId>
	<version>1.6</version>
	<executions>
	  <execution>
	    <id>sign-artifacts</id>
	    <phase>verify</phase>
	    <goals>
	      <goal>sign</goal>
	    </goals>
	  </execution>
	</executions>
      </plugin>

      <plugin>
	<groupId>org.apache.maven.plugins</groupId>
	<artifactId>maven-install-plugin</artifactId>
	<version>3.0.0-M1</version>
      </plugin>

      <plugin>
	<groupId>org.apache.maven.plugins</groupId>
	<artifactId>maven-deploy-plugin</artifactId>
	<version>3.0.0-M1</version>
      </plugin>


    <!--plugin>
      <groupId>org.sonatype.plugins</groupId>
      <artifactId>nexus-staging-maven-plugin</artifactId>
      <version>1.6.7</version>
      <extensions>true</extensions>
      <configuration>
        <serverId>fileRepositorySona</serverId>
        <nexusUrl>https://oss.sonatype.org/</nexusUrl>
        <autoReleaseAfterClose>false</autoReleaseAfterClose>
      </configuration>
    </plugin-->


    </plugins>

    <extensions>
      <extension>
        <groupId>org.apache.maven.wagon</groupId>
         <artifactId>wagon-ftp</artifactId>
         <version>2.10</version>
      </extension>
      <extension>
        <groupId>org.apache.maven.wagon</groupId>
         <artifactId>wagon-file</artifactId>
         <version>2.10</version>
      </extension>
      <!-- Deploy via svn -->
      <!--extension>
        <groupId>org.jvnet.wagon-git</groupId>
        <artifactId>wagon-git</artifactId>
        <version>1.9</version>
      </extension-->
    </extensions>
  </build>

  <reporting>
    <plugins>

      <!-- creates a representation of the source code 
	   with line numbers and cross references. 
	   Forms the base for pmd, findbgs and checkstyle 
	   e.g. providing line numbers -->
      <plugin>
	<groupId>org.apache.maven.plugins</groupId>
	<artifactId>maven-jxr-plugin</artifactId>
	<version>3.0.0</version>
      </plugin>

        <!-- configures the aspects of the reporting, 
	   i.e. the kinds of reports generated. -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-project-info-reports-plugin</artifactId>
        <version>3.1.1</version>
        <configuration>
          <dependencyLocationsEnabled>false</dependencyLocationsEnabled>
        </configuration>
	<reportSets>
	  <reportSet>
	    <id>gen-report</id>
	    <reports>
	      <report>index</report>
	      <report>summary</report>
	      <report>licenses</report>
	      <report>team</report>

	      <report>ci-management</report>
	      <!--report>dependencies</report-->
	      <report>dependency-convergence</report>
	      <report>dependency-info</report>
	      <report>dependency-management</report>
	      <report>distribution-management</report>
	      <report>issue-management</report>
	      <report>mailing-lists</report>
	      <report>modules</report>
	      <report>plugin-management</report>
	      <report>plugins</report>
	      <report>scm</report>
	    </reports>
	  </reportSet>
	</reportSets>
      </plugin>

      <!-- Creates surefire test reports -->
      <plugin>
 	<groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-report-plugin</artifactId>
        <version>${versionTestPlugins}</version>
	<configuration>
	  <!-- to show failed tests only -->
	  <showSuccess>false</showSuccess>
	</configuration>
      </plugin>

      <!-- pmd plugin **** reporting or build? -->
      <plugin>
	<groupId>org.apache.maven.plugins</groupId>
	<artifactId>maven-pmd-plugin</artifactId>
	<version>${versionPmdMvnPlugin}</version>
      </plugin>

      <!--plugin>
 	<groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <version>2.17</version>

	<dependencies>
	  <dependency>
	    <groupId>com.puppycrawl.tools</groupId>
	    <artifactId>checkstyle</artifactId>
	    <version>8.4</version>
	  </dependency>
	</dependencies>

	<configuration>
	  <configLocation>
	    ${basedir}/config/myChkStyleRuleset.xml
	  </configLocation>
         <encoding>UTF-8</encoding>
	  <excludes>**/parser/**</excludes>
	</configuration>
      </plugin-->

      <!-- findbugs -->
      <!--plugin>
 	<groupId>org.codehaus.mojo</groupId>
        <artifactId>findbugs-maven-plugin</artifactId>
	<configuration>
	  <xmlOutput>true</xmlOutput-->
	  <!--onlyAnalyze>
	    eu.simuline.util.*, 
	  </onlyAnalyze-->
	  <!-- Optional directory to put findbugs xdoc xml report -->
	  <!--xmlOutputDirectory>target/site</xmlOutputDirectory-->
        <!--/configuration>
      </plugin-->

      <!-- pmd plugin **** reporting or build? -->


     <!-- determines code coverage of tests 
	   **** ignores and excludes are .... ignored **** -->
      <!--plugin>
	<groupId>org.codehaus.mojo</groupId>
        <artifactId>cobertura-maven-plugin</artifactId>
        <version>2.7</version>
      </plugin-->


      <!-- javadoc plugin -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>3.2.0</version>
        <configuration>
	  <!--phase>generate-sources</phase--> <!-- this is the default -->
	  <sourcepath>
	    ${project.basedir}/src/main/java:${project.basedir}/src/test/java
	  </sourcepath>
	  <tags>
	    <tag>
	      <name>To.Do</name>
	      <!-- todo tag for all places -->
	      <placement>a</placement>
	      <head>what is to be done in the present code fragment. </head>
	    </tag>
	  </tags>
	  <breakiterator>true</breakiterator>
	  <links>
	    <!--link>file:///usr/share/javadoc/java-1.8.0-openjdk/api/</link-->
	    <link>http://junit.sourceforge.net/javadoc</link>
	  </links>
          <show>private</show>
	  <!-- **** myDefault should be linked to ${basedir}/config/MathJax.. --><!-- - -allow-script-in-comments -->
	  <additionalparam>-Xdoclint:html -Xdoclint:reference </additionalparam>
	</configuration>
      </plugin>


      <!-- changes plugin: src/changes/changes.xml -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-changes-plugin</artifactId>
        <version>2.12.1</version>
        <reportSets>
          <reportSet>
            <reports>
              <report>changes-report</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>


    </plugins>
  </reporting>



  <!-- Environment Settings -->
  <scm>
    <connection>
      scm:git:https://github.com/Reissner/octaveInJava.git/
    </connection>
    <!--connection>
      scm:hg:https://hg.kenai.com/hg/javaoctave~source-code-repository
    </connection-->
    <developerConnection>
      scm:git:https://github.com/Reissner/octaveInJava.git/
    </developerConnection>
    <!--developerConnection>
    scm:hg:ssh://kim_i9.dk@hg.kenai.com/javaoctave~source-code-repository
    </developerConnection-->
    <tag>release-0.6.7</tag>
    <url>https://github.com/Reissner/octaveInJava/</url>
    <!--url>https://hg.kenai.com/hg/javaoctave~source-code-repository</url-->
  </scm>

  <distributionManagement><!-- For authentication see ~/.m2/settings.xml -->
    <site>
      <id>fileSite</id>
      <!--url>file:///home/ernst/Software/RepositoryTarget/Site</url-->
      <url>ftp://www.simuline.eu/public_html/JavaOctave</url>
      <!--url>http://www.simuline.eu/public_html/JavaOctave</url-->
    </site>

    <!--repository>
      <id>fileRepository</id>
      <url>ftp://www.simuline.eu/public_ftp/RepositoryTarget</url>
     </repository-->

    <snapshotRepository>
      <id>fileRepositorySona</id>
      <url>${urlSnapshotDir}</url>
      <!-- the rest yields Return code is: 400, ReasonPhrase: Bad Request. -->
      <!--url>https://oss.sonatype.org/service/local/staging/deploy/maven2/
	  </url-->
      <!--url>https://oss.sonatype.org/content/repositories/releases/</url-->
      <!--url>https://oss.sonatype.org/content/groups/public/</url-->
    </snapshotRepository>

    <repository>
      <id>fileRepositorySona</id>
      <!--url>https://oss.sonatype.org/content/repositories/snapshots/</url-->
      <!-- the rest yields Return code is: 400, ReasonPhrase: Bad Request. -->
      <url>
	https://oss.sonatype.org/service/local/staging/deploy/maven2/
      </url>
      <!--url>https://oss.sonatype.org/content/repositories/releases/</url-->
      <!--url>https://oss.sonatype.org/content/groups/public/</url-->
    </repository>

    <!--repository>
      <id>maven-repository.javaoctave.kenai.com</id>
      <name>JavaOctave Maven Repository</name>
      <url>svn:https://kenai.com/svn/javaoctave~maven-repository/maven2</url>
    </repository-->
  </distributionManagement>

</project>
